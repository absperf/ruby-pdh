var search_data = {"index":{"searchIndex":["win32","pdh","constants","counter","pdh_counter_info","pdh_counter_path_elements","pdh_fmt_countervalue","pdh_fmt_countervalue_value","pdherror","pdhffi","query","add_counter()","check_status()","close()","close()","collect_query_data()","enum_object_items()","enum_objects()","expand_wildcards()","get()","get_double()","get_large()","get_long()","new()","new()","new()","open()","read_cwstr()","real_time?()","remove()","gemfile","license","readme","main","win32-pdh.gemspec"],"longSearchIndex":["win32","win32::pdh","win32::pdh::constants","win32::pdh::counter","win32::pdh::counter::pdh_counter_info","win32::pdh::counter::pdh_counter_path_elements","win32::pdh::counter::pdh_fmt_countervalue","win32::pdh::counter::pdh_fmt_countervalue_value","win32::pdh::pdherror","win32::pdh::pdhffi","win32::pdh::query","win32::pdh::query#add_counter()","win32::pdh::check_status()","win32::pdh::counter#close()","win32::pdh::query#close()","win32::pdh::query#collect_query_data()","win32::pdh::enum_object_items()","win32::pdh::enum_objects()","win32::pdh::expand_wildcards()","win32::pdh::counter#get()","win32::pdh::counter#get_double()","win32::pdh::counter#get_large()","win32::pdh::counter#get_long()","win32::pdh::counter::new()","win32::pdh::pdherror::new()","win32::pdh::query::new()","win32::pdh::query::open()","win32::pdh::read_cwstr()","win32::pdh::query#real_time?()","win32::pdh::counter#remove()","","","","",""],"info":[["Win32","","Win32.html","",""],["Win32::Pdh","","Win32/Pdh.html","",""],["Win32::Pdh::Constants","","Win32/Pdh/Constants.html","",""],["Win32::Pdh::Counter","","Win32/Pdh/Counter.html","","<p>Class representing an individual counter.\n<p>This won&#39;t usually be created directly, but built using …\n"],["Win32::Pdh::Counter::PDH_COUNTER_INFO","","Win32/Pdh/Counter/PDH_COUNTER_INFO.html","","<p>msdn.microsoft.com/en-us/library/windows/desktop/aa373038(v=vs.85).aspx\n"],["Win32::Pdh::Counter::PDH_COUNTER_PATH_ELEMENTS","","Win32/Pdh/Counter/PDH_COUNTER_PATH_ELEMENTS.html","","<p>msdn.microsoft.com/en-us/library/windows/desktop/aa373041(v=vs.85).aspx\n"],["Win32::Pdh::Counter::PDH_FMT_COUNTERVALUE","","Win32/Pdh/Counter/PDH_FMT_COUNTERVALUE.html","","<p>msdn.microsoft.com/en-us/library/windows/desktop/aa373050(v=vs.85).aspx\n"],["Win32::Pdh::Counter::PDH_FMT_COUNTERVALUE_VALUE","","Win32/Pdh/Counter/PDH_FMT_COUNTERVALUE_VALUE.html","","<p>msdn.microsoft.com/en-us/library/windows/desktop/aa373050(v=vs.85).aspx\n"],["Win32::Pdh::PdhError","","Win32/Pdh/PdhError.html","","<p>Simple error subclass.  Currently, this is what type all exceptions\ndirectly raised by this library are. …\n"],["Win32::Pdh::PdhFFI","","Win32/Pdh/PdhFFI.html","","<p>Container namespace for all Pdh functions.\n"],["Win32::Pdh::Query","","Win32/Pdh/Query.html","","<p>Class representing a Query, and holding a query handle.\n"],["add_counter","Win32::Pdh::Query","Win32/Pdh/Query.html#method-i-add_counter","(path)","<p>Adds a counter to this query and return it as a Counter object.\n<p>msdn.microsoft.com/en-us/library/windows/desktop/aa372204(v=vs.85).aspx …\n"],["check_status","Win32::Pdh","Win32/Pdh.html#method-c-check_status","(status)","<p>Simple convenience method that checks the status and raises an exception\nunless it&#39;s a successful …\n"],["close","Win32::Pdh::Counter","Win32/Pdh/Counter.html#method-i-close","()",""],["close","Win32::Pdh::Query","Win32/Pdh/Query.html#method-i-close","()",""],["collect_query_data","Win32::Pdh::Query","Win32/Pdh/Query.html#method-i-collect_query_data","()","<p>Calls PdhCollectQueryData.  This is necessary to load counters with data\nbefore retreiving it.\n<p>Some counters …\n"],["enum_object_items","Win32::Pdh","Win32/Pdh.html#method-c-enum_object_items","(object:, source: nil, machine: nil, detail: :novice)","<p>Enumerates an object&#39;s counter and instance names.  Returns an ItemEnum\nwith the results.\n<p>Uses PdhEnumObjectItems: …\n"],["enum_objects","Win32::Pdh","Win32/Pdh.html#method-c-enum_objects","(source: nil, machine: nil, detail: :novice)","<p>Uses PdhEnumObjects to enumerate objects at the given target.  Returns the\nobjects as an array of strings. …\n"],["expand_wildcards","Win32::Pdh","Win32/Pdh.html#method-c-expand_wildcards","(path:, source: nil, expand_counters: true, expand_instances: true)","<p>Expands a wildcard path into all matching counter paths.\n<p>Returns a frozen array of frozen strings.\n<p>Uses …\n"],["get","Win32::Pdh::Counter","Win32/Pdh/Counter.html#method-i-get","(format)","<p>Get the PDH_FMT_COUNTERVALUE_VALUE given the format, checking status and\nraising an exception if necessary. …\n"],["get_double","Win32::Pdh::Counter","Win32/Pdh/Counter.html#method-i-get_double","()","<p>Get value as a double.\n<p>This uses #get, so read the notes in there about exception raising.\n"],["get_large","Win32::Pdh::Counter","Win32/Pdh/Counter.html#method-i-get_large","()","<p>Get value as a 64-bit integer.\n<p>This uses #get, so read the notes in there about exception raising.\n"],["get_long","Win32::Pdh::Counter","Win32/Pdh/Counter.html#method-i-get_long","()","<p>Get value as a 32-bit integer\n<p>This uses #get, so read the notes in there about exception raising.\n"],["new","Win32::Pdh::Counter","Win32/Pdh/Counter.html#method-c-new","(query:, path:)","<p>Initializes the counter from a query and a path.  This usually won&#39;t be\ncalled directly, but generated …\n"],["new","Win32::Pdh::PdhError","Win32/Pdh/PdhError.html#method-c-new","(status)",""],["new","Win32::Pdh::Query","Win32/Pdh/Query.html#method-c-new","(source=nil)",""],["open","Win32::Pdh::Query","Win32/Pdh/Query.html#method-c-open","(source=nil)","<p>Simple query opening function.\n<p>Uses the OpenQuery function and gets a query, passes it into the block, …\n"],["read_cwstr","Win32::Pdh","Win32/Pdh.html#method-c-read_cwstr","(pointer)","<p>Takes a pointer to null-terminated utf-16 data and reads it into a utf-8\nencoded string.\n<p>If pointer is …\n"],["real_time?","Win32::Pdh::Query","Win32/Pdh/Query.html#method-i-real_time-3F","()","<p>Simple wrapper around PdhIsRealTimeQuery.\n<p>msdn.microsoft.com/en-us/library/windows/desktop/aa372646(v=vs.85).aspx …\n"],["remove","Win32::Pdh::Counter","Win32/Pdh/Counter.html#method-i-remove","()","<p>Remove the counter from its Query.\n<p>This isn&#39;t necessary as a part of general cleanup, as closing a …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p>gem &#39;ffi&#39;\n"],["LICENSE","","LICENSE.html","","<p>MIT License\n<p>Copyright © 2018 Absolute Performance\n<p>Permission is hereby granted, free of charge, to any …\n"],["README","","README_md.html","","<p>ruby-pdh\n<p>Simple Ruby gem using ffi to interface with Windows PDH\n<p>Note that this library works, but it isn&#39;t …\n"],["main","","main_rdoc.html","","<p>This is the documentation for the win32-pdh ruby gem.\n<p>To get started, look at Win32::Pdh or Win32::Pdh::Query …\n"],["win32-pdh.gemspec","","win32-pdh_gemspec.html","","<p>require &#39;rubygems&#39;\n<p>Gem::Specification.new do |spec|\n\n<pre>spec.name       = &#39;win32-pdh&#39;\nspec.version ...</pre>\n"]]}}